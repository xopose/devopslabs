name: Spring CI

on:
  push:
    branches: [ master, lab2, lab3, lab4 ]
  pull_request:
    branches: [ master, lab2, lab3, lab4 ]

jobs:
  build-backend:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build backend
        run: |
          cd backend
          mvn clean package -B -DskipTests

  test-backend:
    needs: build-backend
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Tests
        run: |
          cd backend
          mvn clean verify

  build-frontend:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Dependencies
        run: |
          cd frontend
          npm ci

      - name: Tests
        run: |
          cd frontend
          npx vitest run

  docker-deploy:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build images
        run: |
          docker compose -f docker-compose.yml build
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-backend:latest
          docker tag frontend ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Set up KUBECONFIG
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" | base64 --decode > ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.DOCKER_USERNAME }} \
            --docker-password=${{ secrets.DOCKER_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f k8s/

      - name: Verify Deployment
        run: |
          kubectl get pods
          kubectl get svc
          kubectl get hpa